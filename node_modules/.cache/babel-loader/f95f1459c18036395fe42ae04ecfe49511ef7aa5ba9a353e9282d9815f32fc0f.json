{"ast":null,"code":"var _jsxFileName = \"/Users/iamtra/Desktop/react/pract/songsaver/src/components/SongOverview.js\";\nimport React from \"react\";\nimport SongForm from \"./SongForm\";\nimport SongList from \"./SongList\";\nimport Filter from \"./Filter\";\n\n/* \nclass SongOverview extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            songs: [\n                {\n                    title: \"Under the Bridge\",\n                    artist: \"Red Hot Chili Peppers\",\n                    genre: \"Rock\",\n                    rating: \"5 Stars\"\n                },\n                {\n                    title: \"Careless Whisper\",\n                    artist: \"George Michael\",\n                    genre: \"Pop\",\n                    rating: \"4 Stars\"\n                },\n                {\n                    title: \"Fly Me To the Moon\",\n                    artist: \"Frank Sinatra\",\n                    genre: \"Jazz\",\n                    rating: \"4 Stars\"\n                },\n                {\n                    title: \"Purple, Yellow, Red & Blue\",\n                    artist: \"Portugal. the Man\",\n                    genre: \"Rock\",\n                    rating: \"5 Stars\"\n                },\n                {\n                    title: \"Sunshine\",\n                    artist: \"Raul Midón\",\n                    genre: \"Folk\",\n                    rating: \"4 Stars\"\n                },\n                {\n                    title: \"Clocks\",\n                    artist: \"Coldplay\",\n                    genre: \"Pop\",\n                    rating: \"3 Stars\"\n                },\n                {\n                    title: \"Wonderwall\",\n                    artist: \"Oasis\",\n                    genre: \"Rock\",\n                    rating: \"2 Stars\"\n                }\n            ],\n            filteredSongs: undefined\n        }\n    }\n\n    addSong = (song) => {\n        this.setState({\n            songs: [\n                ...this.state.songs,{\n                    id: song.id,\n                    title: song.title,\n                    artist: song.artist,\n                    genre: song.genre,\n                    rating: song.rating,\n                }\n            ]\n        })\n   }\n   deleteSong = (id) => {\n        this.setState((prevState) => {\n            const songs = prevState.songs\n            const newList = songs.filter((song, index) => index !==id)\n            return {\n                songs: newList\n            }\n        })\n    }\n\n    FilterGenre = (event) => {\n        this.setState((prevState) => {\n            const songs = prevState.songs\n            const genre = event.target.value\n            const filteredList = songs.filter((songs) => songs.genre === genre)\n            return {\n                filteredSongs: filteredList\n            }\n        })\n    }\n\n    FilterRating = (event) => {\n        this.setState((prevState) => {\n            const songs = prevState.songs\n            const rating = event.target.value\n            const filteredList = songs.filter((songs) => songs.rating === rating)\n            return{\n                filteredSongs: filteredList\n            }\n        })\n    }\n\n    resetFilter = () => {\n        this.setState({\n            filteredSongs: undefined\n        })\n    }\n\n\n    render() {\n        return (\n            <div className=\"overview\">\n                <SongForm onSubmit={this.addSong}/>\n                <Filter \n                songs={this.state.songs}\n                FilterGenre={this.FilterGenre}\n                FilterRating={this.FilterRating}\n                hasFilter={!!this.state.filteredSongs}\n                resetFilter={this.resetFilter}\n                />\n                <table className=\"song-table\">\n                    <tbody>\n                        <tr className=\"song-header\">  \n                            <th className=\"Song\">Song</th>\n                            <th className=\"Artist\">Artist</th>\n                            <th className=\"Genre\">Genre</th>\n                            <th className=\"Rating\">Rating</th>\n                        </tr>\n                    </tbody>\n                \n                    <SongList \n                        className=\"song-list\"\n                        songs={this.state.filteredSongs ?? this.state.songs}\n                        handleClick={this.deleteSong}\n                    />\n                </table>\n            </div>\n            );\n        }\n    }\n\nexport default SongOverview; */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SongOverview extends Component {\n  constructor() {\n    super();\n    this.addSong = song => {\n      // do something to change the state\n    };\n    this.state = {\n      songs: []\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SongForm, {\n        addSong: this.addSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"song-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"song-row__item\",\n            children: \"Song\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"song-row__item\",\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"song-row__item\",\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"song-row__item\",\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(SongList, {\n        songs: this.state.songs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default SongOverview;","map":{"version":3,"names":["React","SongForm","SongList","Filter","SongOverview","Component","constructor","addSong","song","state","songs","render","width"],"sources":["/Users/iamtra/Desktop/react/pract/songsaver/src/components/SongOverview.js"],"sourcesContent":["import React from \"react\";\nimport SongForm from \"./SongForm\"\nimport SongList from \"./SongList\"\nimport Filter from \"./Filter\"\n\n/* \nclass SongOverview extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            songs: [\n                {\n                    title: \"Under the Bridge\",\n                    artist: \"Red Hot Chili Peppers\",\n                    genre: \"Rock\",\n                    rating: \"5 Stars\"\n                },\n                {\n                    title: \"Careless Whisper\",\n                    artist: \"George Michael\",\n                    genre: \"Pop\",\n                    rating: \"4 Stars\"\n                },\n                {\n                    title: \"Fly Me To the Moon\",\n                    artist: \"Frank Sinatra\",\n                    genre: \"Jazz\",\n                    rating: \"4 Stars\"\n                },\n                {\n                    title: \"Purple, Yellow, Red & Blue\",\n                    artist: \"Portugal. the Man\",\n                    genre: \"Rock\",\n                    rating: \"5 Stars\"\n                },\n                {\n                    title: \"Sunshine\",\n                    artist: \"Raul Midón\",\n                    genre: \"Folk\",\n                    rating: \"4 Stars\"\n                },\n                {\n                    title: \"Clocks\",\n                    artist: \"Coldplay\",\n                    genre: \"Pop\",\n                    rating: \"3 Stars\"\n                },\n                {\n                    title: \"Wonderwall\",\n                    artist: \"Oasis\",\n                    genre: \"Rock\",\n                    rating: \"2 Stars\"\n                }\n            ],\n            filteredSongs: undefined\n        }\n    }\n\n    addSong = (song) => {\n        this.setState({\n            songs: [\n                ...this.state.songs,{\n                    id: song.id,\n                    title: song.title,\n                    artist: song.artist,\n                    genre: song.genre,\n                    rating: song.rating,\n                }\n            ]\n        })\n   }\n   deleteSong = (id) => {\n        this.setState((prevState) => {\n            const songs = prevState.songs\n            const newList = songs.filter((song, index) => index !==id)\n            return {\n                songs: newList\n            }\n        })\n    }\n\n    FilterGenre = (event) => {\n        this.setState((prevState) => {\n            const songs = prevState.songs\n            const genre = event.target.value\n            const filteredList = songs.filter((songs) => songs.genre === genre)\n            return {\n                filteredSongs: filteredList\n            }\n        })\n    }\n\n    FilterRating = (event) => {\n        this.setState((prevState) => {\n            const songs = prevState.songs\n            const rating = event.target.value\n            const filteredList = songs.filter((songs) => songs.rating === rating)\n            return{\n                filteredSongs: filteredList\n            }\n        })\n    }\n\n    resetFilter = () => {\n        this.setState({\n            filteredSongs: undefined\n        })\n    }\n\n\n    render() {\n        return (\n            <div className=\"overview\">\n                <SongForm onSubmit={this.addSong}/>\n                <Filter \n                songs={this.state.songs}\n                FilterGenre={this.FilterGenre}\n                FilterRating={this.FilterRating}\n                hasFilter={!!this.state.filteredSongs}\n                resetFilter={this.resetFilter}\n                />\n                <table className=\"song-table\">\n                    <tbody>\n                        <tr className=\"song-header\">  \n                            <th className=\"Song\">Song</th>\n                            <th className=\"Artist\">Artist</th>\n                            <th className=\"Genre\">Genre</th>\n                            <th className=\"Rating\">Rating</th>\n                        </tr>\n                    </tbody>\n                \n                    <SongList \n                        className=\"song-list\"\n                        songs={this.state.filteredSongs ?? this.state.songs}\n                        handleClick={this.deleteSong}\n                    />\n                </table>\n            </div>\n            );\n        }\n    }\n\nexport default SongOverview; */\n\n\n\n\nclass SongOverview extends Component {\n\n    constructor() {\n      super()\n      this.state = \n      {\n        songs: []\n      }\n  \n    }\n  \n    addSong = (song) => {\n                          // do something to change the state\n    }\n  \n    render() {\n      return (\n        <div>\n                <SongForm addSong={this.addSong}/>\n                                          <table style={{width: \"100%\"}}>\n                          <tr className=\"song-header\">  \n                                  <th className=\"song-row__item\">Song</th>\n                                  <th className=\"song-row__item\">Artist</th>\n                                  <th className=\"song-row__item\">Genre</th>\n                                  <th className=\"song-row__item\">Rating</th>\n                                </tr>\n                                  </table>\n                <SongList songs={this.state.songs}/>\n        </div>\n      );\n    }\n  }\n  \n  export default SongOverview;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1IA;AA+IA,MAAMC,YAAY,SAASC,SAAS,CAAC;EAEjCC,WAAW,GAAG;IACZ,KAAK,EAAE;IAAA,KAQTC,OAAO,GAAIC,IAAI,IAAK;MACE;IAAA,CACrB;IATC,IAAI,CAACC,KAAK,GACV;MACEC,KAAK,EAAE;IACT,CAAC;EAEH;EAMAC,MAAM,GAAG;IACP,oBACE;MAAA,wBACQ,QAAC,QAAQ;QAAC,OAAO,EAAE,IAAI,CAACJ;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAE,eACR;QAAO,KAAK,EAAE;UAACK,KAAK,EAAE;QAAM,CAAE;QAAA,uBAC9C;UAAI,SAAS,EAAC,aAAa;UAAA,wBACnB;YAAI,SAAS,EAAC,gBAAgB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAU,eACxC;YAAI,SAAS,EAAC,gBAAgB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAY,eAC1C;YAAI,SAAS,EAAC,gBAAgB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAW,eACzC;YAAI,SAAS,EAAC,gBAAgB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAY;QAAA;UAAA;UAAA;UAAA;QAAA;MACvC;QAAA;QAAA;QAAA;MAAA,QACK,eAC1B,QAAC,QAAQ;QAAC,KAAK,EAAE,IAAI,CAACH,KAAK,CAACC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACtC;EAEV;AACF;AAEA,eAAeN,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}